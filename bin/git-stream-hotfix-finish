#!/usr/bin/env bash

gitstream_hotfix_finish() {
    local version hotfix newVersion prefixedVersion newPrefixedVersion branch merge arg

    merge=1

    gitstream_environment

    if [ $# -lt 3 ]; then
        usage; exit 1;
    fi

    while arg=$1 && [ "${arg:0:1}" == "-" ]; do
        case ${arg} in
            "-n"|"--no-merge")
                merge=0; shift
                ;;
            *)
                usage; exit 1
                ;;
        esac
    done

    version="$1"
    hotfix="$2"
    newVersion="$3"
    prefixedVersion="${VERSION_PREFIX}${version}"
    newPrefixedVersion="${VERSION_PREFIX}${newVersion}"
    branch="${HOTFIX_PREFIX}${version}-${hotfix}"

    if ! git_rev_exists ${branch}; then
        print_error "Branch ${branch} does not exist"
        exit 1
    fi

    if [ "$(git_current_branch)" != "${branch}" ]; then
        print_error "You are not currently on ${branch}"
        exit 1
    fi

    if ! git_working_dir_clean; then
        print_error "Working directory not clean"
        exit 1
    fi

    if ! do_git tag ${newPrefixedVersion}; then
        print_error "Failed to make new tag ${newPrefixedVersion}."
        bug_error_message
        exit 1
    fi

    echo "The new release ${newPrefixedVersion} has been created."

    if ! do_git checkout ${WORKING_BRANCH}; then
        print_error "Failed to checkout #{WORKING_BRANCH}"
        bug_error_message
        exit 1
    fi

    if ! do_git branch -D ${branch}; then
        print_error "Failed to remove ${branch}"
        bug_error_message
        exit 1
    fi

    if [ ${merge} -eq 1 ]; then

        if ! do_git merge ${newPrefixedVersion}; then
            print_error "There were merge problems. Please resolve any conflicts and commit to complete."
            exit 1
        fi

        echo "${hotfix} has been applied to master."
    fi


}