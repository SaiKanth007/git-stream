#!/usr/bin/env bash

gitstream_release_finish() {
    local version prefixed_version branch merge_args

    if [ $# -ne 1 ]; then
        usage; exit 1;
    fi

    version="$1"

    if [ ${version:0:${#VERSION_PREFIX}} = ${VERSION_PREFIX} ]; then
        prefixed_version="${version}"
    else
        prefixed_version="${VERSION_PREFIX}${version}"
    fi

    branch="${RELEASE_PREFIX}${prefixed_version}"


    gitstream_checkout_branch "${branch}"

    if git_rev_exists ${prefixed_version}; then
        print_error "Tag ${prefixed_version} already exists"
        exit 1
    fi

    gitstream_run_hook_die pre release finish "${prefixed_version}" "${branch}" "${WORKING_BRANCH}"

    if ! do_git tag ${prefixed_version}; then
        print_error "Failed to create tag ${prefixed_version}"
        exit 1
    fi

    gitstream_checkout_branch "${WORKING_BRANCH}"

    if [ ${GITSTREAM_RELEASE_NOMERGE} -eq 0 ]; then
        if [ ${GITSTREAM_RELEASE_NOFF} -eq 1 ] || [ ${#GITSTREAM_RELEASE_MESSAGE} -gt 0 ]; then
            merge_args="${merge_args} --no-ff"
        fi

        if [ ${#GITSTREAM_RELEASE_MESSAGE} -gt 0 ]; then
            merge_args="${merge_args} -m ${GITSTREAM_RELEASE_MESSAGE}"
        fi

        gitstream_merge "${branch}" "${WORKING_BRANCH}" ${merge_args}

        echo
        echo "Release ${version} has been merged into ${WORKING_BRANCH} and a tag made"
    else
        echo
        echo "Release ${version} tag made"
    fi

    if [ ${GITSTREAM_RELEASE_LEAVE} -eq 0 ]; then
        if ! do_git branch -d ${branch}; then
            print_error "Failed to remove ${branch}"
            exit 1
        fi
    fi

    gitstream_checkout_branch "${WORKING_BRANCH}"

    if [ ${GITSTREAM_RELEASE_NO_PUSH} -eq 0 ]; then
        git_push
        git_push_tags
    fi

    gitstream_run_hook post release finish "${prefixed_version}" "${branch}" "${WORKING_BRANCH}"
}
